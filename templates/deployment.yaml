piVersion: apps/v1
kind: Deployment
metadata:
  name: sre-challenge
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: sre-challenge
  template:
    metadata:
      labels:
        app: sre-challenge
    spec:
      containers:
      - name: nginx
        image: {{ .Values.image }}
        ports:
        - containerPort: {{ .Values.containerPort }}
        env:
          - name: MY_SECRET
            valueFrom:
              secretKeyRef:
                name: sre-challenge-secret
                key: my-secret
        volumeMounts:
        - name: app-volume
          mountPath: /var/www/html
        livenessProbe:
          tcpSocket:
            port: {{ .Values.containerPort }}
          initialDelaySeconds: 5
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ping
            port: {{ .Values.containerPort }}
            scheme: HTTP
        resources:
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}

      serviceAccountName: sre-challenge-account
      volumes:
      - name: app-volume
        persistentVolumeClaim:
          claimName: sre-challenge-pvc
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: {{ .Values.maxUnavailable }}
      maxSurge: {{ .Value
